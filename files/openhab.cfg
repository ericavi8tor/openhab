# This is the default configuration file, which comes with every openHAB distribution.
# You should do a copy of it with the name 'openhab.cfg' and configure your personal
# settings in there. This way you can be sure that they are not overwritten, if you
# update openHAB one day.


####################################################################################### 
#####                        General configurations                               #####
####################################################################################### 

# Configuration folders (must exist as a subdirectory of "configurations"; the value
# tells the number of seconds for the next scan of the directory for changes. A
# value of -1 deactivates the scan).
# A comma separated list can follow after the refresh value. This list defines a filter
# for valid file extensions for the models.
folder:items=10,items
folder:sitemaps=10,sitemap
folder:rules=10,rules
folder:scripts=10,script
folder:persistence=10,persist

# configures the security options. The following values are valid:
# ON = security is switched on generally
# OFF = security is switched off generally
# EXTERNAL = security is switched on for external requests 
#            (e.g. originating from the Internet) only
# (optional, defaults to 'OFF')
#security:option=

# the Netmask to define a range of internal IP-Addresses which doesn't require
# authorization (optional, defaults to '192.168.1.0/24')
#security:netmask=

# The name of the default persistence service to use
persistence:default=rrd4j

# The refresh interval for the main configuration file. A value of '-1' 
# deactivates the scan (optional, defaults to '-1' hence scanning is deactivated)
#mainconfig:refresh=

# Bind service discovery to specific hostname or IP address
#servicediscovery:bind_address=127.0.0.1

################################## Chart Servlet ######################################
#
# This section defines the configuration for the chart servlet.
chart:provider=default

#
# Set the default height of a chart if the client doesn't provide this in the request
# defaults to 240
#chart:defaultHeight=240

#
# Set the default width of a chart if the client doesn't provide this in the request
# defaults to 480
#chart:defaultWidth=480

#
# Set a scale factor. This is used if the client sets the size in the request.
# defaults to 1 (ie no scaling)
#chart:scale=1


####################################################################################### 
#####                       Action configurations                                 #####
####################################################################################### 

######################## Mail Action configuration ####################################
#
# The SMTP server hostname, e.g. "smtp.gmail.com"
#mail:hostname=

# the SMTP port to use (optional, defaults to 25 (resp. 587 for TLS))
#mail:port=

# the username and password if the SMTP server requires authentication
#mail:username=
#mail:password=

# The email address to use for sending mails
#mail:from=

# set to "true", if TLS should be used for the connection
# (optional, defaults to false)
#mail:tls=

# set to "true", if POP before SMTP (another authentication mechanism)
# should be enabled. Username and Password are taken from the above
# configuration (optional, default to false)
#mail:popbeforesmtp=

# Character set used to encode message body
# (optional, if not provided platform default is used)
#mail:charset=

########################## XMPP Action configuration ##################################
#

# The username of the XMPP account used by openHAB
# Most services will require that you use only the localpart of the accounts JID.
# For example if your accounts JID is myuser@example.org, then only configure 'myuser'.
#xmpp:username=myuser

# The password of the XMPP account used by openHAB
#xmpp:password=mypassword

# The XMPP service to use, e.g. "jabber.de"
# A list of public XMPP services can be found at https://xmpp.net/directory.php
#xmpp:servername=example.org

# The Security mode used for the XMPP connection. Can be either 'required'
# or 'disabled'. Defaults to 'disabled', which means that TLS will not be used.
# Warning: If you change this to non-disabled, then you must make sure that your
# TLS server certificate can be validated, otherwhise the connection will fail.
#xmpp:securitymode=disabled

# The TLS Pin used to verify the XMPP service's certificate. Set this in case openhab's
# default SSLContext is unable to verfiy it (e.g. because the XMPP service uses a self-signed
# certificate). The PIN value is bascially the hash of the certificate in hex.
# You have to set 'xmpp:securitymode' to 'required' to enable TLS for XMPP connections.
# For information on how to generate the PIN visit https://github.com/Flowdalic/java-pinning
#xmpp:tlspin=CERTSHA256:83:F9:17:1E:06:A3:13:11:88:89:F7:D7:93:02:BD:1B:7A:20:42:EE:0C:FD:02:9A:BF:8D:D0:6F:FA:6C:D9:D3

# The XMPP Proxyserver to use, e.g. "gmail.com"
#xmpp:proxy=

# the server port to use (optional, defaults to 5222)
#xmpp:port=

# a comma separated list of users that are allowed to use the XMPP console
#xmpp:consoleusers=

# the multi user chat to join, e.g. openhab@chat.example.com
#xmpp:chatroom=

# the nickname used in the multi user chat (optional, defaults to openhab-bot)
#xmpp:chatnickname=

# the password required to join the multi user chat
#xmpp:chatpassword=

########################## Prowl Action configuration #################################
#
# the apikey for authentication (generated on the Prowl website)
#prowl:apikey=

# the default priority of a Prowl notifications (optional, defaults to '0')
#prowl:defaultpriority=

# the url of the Prowl public api
# (optional, defaults to 'https://prowl.weks.net/publicapi/') 
#prowl:url=

#################### Pushover Action configuration #####################
#
# The timeout for the communication with the Pushover service (optional, defaults
# to 10000 milliseconds)
#pushover:defaultTimeout=

# You need to provide a Pushover API token to send to devices. If not here, than during
# the action call itself.
#pushover:defaultToken=

# You need to provide a Pushover User Key to send to devices. If not here, than during
# the action call itself.
#pushover:defaultUser=

# Name of the sending application (optional). Defaults to 'openHAB'.
#pushover:defaultTitle=openHAB

# The priority to use for messages if not specified otherwise. Can range from
# -2 (lowest) to 2 (highest)
#pushover:defaultPriority=

# Url to attach to the message if not specified in the command (optional). Can be left empty.
#pushover:defaultUrl=

# Url Title to attach to the message if not specified in the command (optional). Can be left empty.
#pushover:defaultUrlTitle=

# When priority is high priority (2), how often in seconds should messages be resent. Defaults to 300 seconds.
#pushover:defaultRetry=

# When priority is high priority (2), how long to continue resending messages until acknowledged. Defaults to 3600 seconds.
#pushover:defaultExpire=

########################### Twitter Action configuration ##############################
#
# The ConsumerKey, ConsumerSecret combination (optional, defaults to official Twitter-App
# Key-Secret-Combination)
#twitter:key=
#twitter:secret=

# Flag to enable/disable the Twitter client (optional, defaults to 'false')
#twitter:enabled=

#################### Notify my Android (NMA) Action configuration #####################
#
# The timeout for the communication with the NMA service (optional, defaults
# to 10000 milliseconds)
#nma:timeout=

# If you have a developerKey from NMA you can set it here, but this completely optional
#nma:developerKey=

# The default api key to send messages to. Api keys can be created in your accounts dashboard.
#nma:apiKey=

# The application name which NMA will show (optional, defaults to 'openHAB').
#nma:appName=

# The priority to use for messages if not specified otherwise. Can range from
# -2 (lowest) to 2 (highest)
#nma:defaultPriority=

# The URL to attach to NMA messages by default  if not specified otherwise. Can be left empty.
#nma:defaultUrl=

####################### OpenWebIf Action configuration ########################
#
#openwebif:receiver.<name>.host=
#openwebif:receiver.<name>.port=
#openwebif:receiver.<name>.user=
#openwebif:receiver.<name>.password=
#openwebif:receiver.<name>.https=

####################################################################################### 
#####                   I/O component configurations                              #####
####################################################################################### 

########################## Google Calendar configuration ##############################
#
# the username and password for Google Calendar Account
#gcal:username=
#gcal:password=

# the url of the calendar feed
#gcal:url=

# the filter criteria for full text query (optional)
#gcal:filter=

# refresh interval in milliseconds (optional, defaults to 900000 [15 minutes])
#gcal:refresh=

############################# Dropbox configuration ###################################
#
# Operates the Synchronizer in fake mode which avoids up- or downloading files to and from Dropbox.
# This is meant as testMode for the filter settings (optional, defaults to false)
#dropbox:fakemode=

# the up- and download interval as Cron-Expression. See the Quartz-Tutorial
# http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/tutorial-lesson-06
# for more information on how to use them best (optional, defaults to '0 0/5 * * * ?'
# which means every 5 minutes)
#dropbox:uploadInterval=
#dropbox:downloadInterval=

# the AppKey, AppSecret combination (optional, defaults to official Dropbox-App
# Key-Secret-Combination)
#dropbox:appkey=
#dropbox:appsecret=

# defines the mode how files are synchronized with dropbox. Valid SyncModes are
# 'DROPBOX_TO_LOCAL', 'LOCAL_TO_DROPBOX' and 'BIDIRECTIONAL' (optional, defaults
# to 'LOCAL_TO_DROPBOX')
#dropbox:syncmode=

# the base directory to synchronize with openHAB, configure 'filter' to select
# files (optional, defaults to '.')
#dropbox:contentdir=

# defines a comma separated list of regular expressions which matches the 
# filenames to upload to Dropbox (optional, defaults to '/configurations/.*,
# /logs/.*, /etc/.*')
#dropbox:uploadfilter=

# defines a comma separated list of regular expressions which matches the 
# filenames to download from Dropbox (optional, defaults to '/configurations/.*')
#dropbox:downloadfilter=

############################# MaryTTS configuration ###################################
#
# the default voice used by the MaryTTS engine. Available voices are: bits1-hsmm 
# (german, female), bits3-hsmm (german, male), cmu-slt-hsmm (english, male) (optional,
# defaults to the systems' default voice or the first available voice)
#marytts:voice=

###################### Speech-Dispatcher TTS configuration ############################
#
# Hostname or ip of the first Speech Dispatcher device to control 
# speechdispatcher:<SDId1>.host=
# Port of the Speech Dispatcher to control (optional, defaults to 6560)
# speechdispatcher:<SDId1>.port=6560

###################### GoogleTTS configuration ############################
#
# The language to be used by the GoogleTTS engine (optional, default: 'en').
# Language must be supported for audio output by https://translate.google.com.
# googletts:language=en
# Sentence delimiters used to split text into sentences (optional, default: !.?:;)
# googletts:sentenceDelimiters=
# Google Translate URL to be used for converting text to speech (optional, 
# defaults to http://translate.google.com/translate_tts?tl=%s&q=%s&client=t).
# googletts:translateUrl=

####################################################################################### 
#####                      Persistence configurations                             #####
####################################################################################### 

########################### RRD4J Persistence Service #################################
#
# please note that currently the first archive in each RRD defines the consolidation
# function (e.g. AVERAGE) used by OpenHAB, thus only one consolidation function is
# fully supported
#
# default_numeric and default_other are internally defined defnames and are used as
# defaults when no other defname applies

#rrd4j:<defname>.def=[ABSOLUTE|COUNTER|DERIVE|GAUGE],<heartbeat>,[<min>|U],[<max>|U],<step>
#rrd4j:<defname>.archives=[AVERAGE|MIN|MAX|LAST|FIRST|TOTAL],<xff>,<steps>,<rows>
#rrd4j:<defname>.items=<list of items for this defname> 

######################## Open.Sen.se Persistence Service ##############################
#
# the url of the Open.Sen.se public api (optional, defaults to 
# 'http://api.sen.se/events/?sense_key=') 
#sense:url=

# the Open.Sen.se API-Key for authentication (generated on the Open.Sen.se website)
#sense:apikey=

######################### Logging Persistence Service #################################
#
# the logback encoder pattern to use to write log entries
# see http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout for all options
# the item name is available as the "logger" name, the state as the "msg"
logging:pattern=%date{ISO8601} - %-25logger: %msg%n

########################### Db4o Persistence Service ##################################
#
# the backup interval as Cron-Expression (optional, defaults to '0 0 1 * * ?' 
# which means every morning at 1 o'clock)
#db4o:backupinterval=
	
# the commit interval in seconds (optional, default to '5')
#db4o:commitinterval=

# the amount of backup files allowed in DB_FOLDER_NAME (optional, defaults
# to '7')
#db4o:maxbackups=

############################ SQL Persistence Service ##################################
# the database url like 'jdbc:mysql://<host>:<port>/<database>' (without quotes)
#mysql:url=

# the database user
#mysql:user=

# the database password
#mysql:password=

# the reconnection counter
#mysql:reconnectCnt=

# the connection timeout (in seconds)
#mysql:waitTimeout=

############################ Cosm Persistence Service #################################
#
# the url of the Cosm feed (optional, defaults to 'http://api.cosm.com/v2/feeds/') 
#cosm:url=

# the Cosm API-Key for authentication (generated on the Cosm website)
#cosm:apikey=

############################ GCal Persistence Service #################################
#
# the username and password for Google Calendar Account
#gcal-persistence:username=
#gcal-persistence:password=

# the url of the calendar feed
#gcal-persistence:url=

# the offset (in days) new calendar entries will be created in future (optional,
# defaults to 14)
#gcal-persistence:offset=

# the base script which is written to the newly created Calendar-Events by
# the GCal-based presence simulation. It must contain two format markers '%s'.
# The first marker represents the Item to send the command to and the second
# represents the State (optional, defaults to 
# '> if (PresenceSimulation.state == ON) sendCommand(%s,%s)')
#gcal-persistence:executescript=

################################# MQTT Persistence #########################################
#
# Name of the broker as defined in the section MQTT Transport
# mqtt-persistence:broker=

# The MQTT topic to which the persistence messages should be sent.
# mqtt-persistence:topic=

# A string representing the persistence message content.
# mqtt-persistence:message=

############################ MongoDB Persistence Service ##################################
#
# the database URL, e.g. mongodb://127.0.0.1:27017
#mongodb:url=mongodb://127.0.0.1:27017

# the database name
#mongodb:database=openhab

# the collection name
#mongodb:collection=openhab


############################ InfluxDB Persistence Service #############################
#
# The database URL, e.g. http://127.0.0.1:8086 or https://127.0.0.1:8084 . 
# Defaults to: http://127.0.0.1:8086
# influxdb:url=http(s)://<host>:<port>

# The name of the database user, e.g. openhab.
# Defaults to: openhab
# influxdb:user=<user>

# The password of the database user.
# influxdb:password=

# The name of the database, e.g. openhab.
# Defaults to: openhab
# influxdb:db=<database>

############################ JPA Persistence Service ##################################
# connection string url
#jpa:url=jdbc:postgresql://<host>:5432/<databasename>
#jpa:url=jdbc:derby://<host>:1527/<databasename>;create=true

# driver class name
#jpa:driver=org.postgresql.Driver
#jpa:driver=org.apache.derby.jdbc.ClientDriver

# username
#jpa:user=

# password
#jpa:password=

########################### MapDB Persistence Service ##################################
# the commit interval in seconds (optional, default to '5')
#mapdb:commitinterval=5

# issue a commit even if the state did not change (optional, defaults to 'false')
#mapdb:commitsamestate=false

#######################################################################################
#####                       Transport configurations                              #####
#######################################################################################

################################# MQTT Transport ######################################
#
# Define your MQTT broker connections here for use in the MQTT Binding or MQTT
# Persistence bundles. Replace <broker> with a id you choose.
#

# URL to the MQTT broker, e.g. tcp://localhost:1883 or ssl://localhost:8883
#mqtt:<broker>.url=tcp://<host>:1883

# Optional. Client id (max 23 chars) to use when connecting to the broker.
# If not provided a default one is generated.
#mqtt:<broker>.clientId=<clientId>

# Optional. User id to authenticate with the broker.
# mqtt:<broker>.user=<user>

# Optional. Password to authenticate with the broker.
#mqtt:<broker>.pwd=<password>

# Optional. Set the quality of service level for sending messages to this broker. 
# Possible values are 0 (Deliver at most once),1 (Deliver at least once) or 2 
# (Deliver exactly once). Defaults to 0.
#mqtt:<broker>.qos=<qos>

# Optional. True or false. Defines if the broker should retain the messages sent to
# it. Defaults to false.
#mqtt:<broker>.retain=<retain>

# Optional. True or false. Defines if messages are published asynchronously or
# synchronously. Defaults to true.
#mqtt:<broker>.async=<async>

# Optional. Defines the last will and testament that is sent when this client goes offline
# Format: topic:message:qos:retained <br/>
#mqtt:<broker>.lwt=<last will definition>



#######################################################################################
#####                        Binding configurations                               #####
#######################################################################################

############################# Bluetooth Binding #######################################
#
# Bluetooth refresh rate in seconds 
# (defines, how often a new device detection scan is performed)
#bluetooth:refresh=20

########################### NetworkHealth Binding #####################################
#
# Default timeout in milliseconds if none is specified in binding configuration
# (optional, default to 5000)
#networkhealth:timeout=

# refresh interval in milliseconds (optional, default to 60000)
#networkhealth:refresh=

# Cache the state for n minutes so only changes are posted (optional, defaults to 0 = disabled)
# Example: if period is 60, once per hour the online states are posted to the event bus;
#          changes are always and immediately posted to the event bus.
# The recommended value is 60 minutes.
#networkhealth:cachePeriod=60

############################### HTTP Binding ##########################################
#
# timeout in milliseconds for the http requests (optional, defaults to 5000)
#http:timeout=

# the interval in milliseconds when to find new refresh candidates
# (optional, defaults to 1000)
#http:granularity=

# configuration of the first cache item
# http:<id1>.url=
# http:<id1>.updateInterval=

# configuration of the second cache item  
# http:<id2>.url=
# http:<id2>.updateInterval=

############################### Asterisk Binding ######################################
#
# Please note: The Asterisk Management Interface (AMI) has to be activated in the
# manager.conf file of your Asterisk PBX.

# hostname of the AMI
#asterisk:host=

# the username and password to login to the AMI
#asterisk:username=
#asterisk:password=

###################################### Mochad X10 #####################################
#
# Ip address and port of the Mochad X10 server
#mochadx10:hostIp=
#mochadx10:hostPort=

################################ NTP Binding ##########################################
#
# refresh interval in milliseconds (optional, defaults to 900000 [15 minutes])
#ntp:refresh=

# the hostname of the timeserver
ntp:hostname=ptbtime1.ptb.de

################################ MPD Binding ##########################################
#
# Host and port of the first MPD to control 
# mpd:<player-id-1>.host=
# mpd:<player-id-1>.port=

# The password to authenticate against the MPD server (optional, can be null to
# indicate that no authentication is required)
# mpd:<player-id-1>.password=

# Host and port of the second MPD to control 
# mpd:<player-id-2>.host=
# mpd:<player-id-2>.port=

# The password to authenticate against the MPD server (optional, can be null to
# indicate that no authentication is required)
# mpd:<player-id-2>.password=

################################ VDR Binding ##########################################
#
# Host and port of the first VDR to control 
# vdr:<vdr-id-1>.host=
# vdr:<vdr-id-1>.port=6419

# Host and port of the second VDR to control 
# vdr:<vdr-id-2>.host=
# vdr:<vdr-id-2>.port=6419

################################ SNMP Binding #########################################
#
# Listening Port (optional, defaults to '162')
#snmp:port=

# The SNMP community to listen to (optional, defaults to 'public')
#snmp:community=

# The SNMP retry timeout (in milliseconds). Defaults to 1500.
# Sets the number of milliseconds between retries.
#snmp:timeout=

# The SNMP number of retries. Defaults to 0.
# Sets the number of retries before aborting the request.
#snmp:retries=

############################### Modbus Binding ########################################
#
# sets refresh interval to Modbus polling service. 
# Value in milliseconds (optional, defaults to 200)
#modbus:poll=

# host:port (mandatory)
#modbus:tcp.slave1.connection=

# The data type, can be "coil" "discrete" "holding" "input"
#modbus:tcp.slave1.type=

# The slave id (optional, defaults to '1')
#modbus:tcp.slave1.id=

# The slave start address (optional, defaults to '0')
#modbus:tcp.slave1.start=

# The number of data item to read
# (optional, defaults to '0' - but set it to something meaningful)
#modbus:tcp.slave1.length=

# Value type, required for combined registers (details: http://www.simplymodbus.ca/FAQ.htm#Types)
# Can be "bit", "int8", "uint8", "int16", "uint16", "int32", "uint32", "float32"
# (optional, defaults to 'uint16')
#modbus:tcp.slave1.valuetype=

############################### Philips Hue Binding ###################################
#
# IP address of Hue Bridge (optional, default is auto-discovery)
#hue:ip=

# Default secret key for the pairing of the Philips Hue Bridge.
# It has to be between 10-40 (alphanumeric) characters 
# This may be changed by the user for security reasons.
hue:secret=openHABRuntime

# Polling interval in msec to retrieve Philips bulb status.
# Other apps can change Hue status or a physical switch can turn on / off lamp status. 
# If this happens the status of hue lamps within OpenHAB won't reflect the real status.
# Currently (September 2014) there is no push technology available, so the only option is 
# to poll Philips bulbs to retrieve status and update items accordingly to reflect changes.
# Polling is enabled if refresh is specified, by commenting out "hue:refresh=10000" statement.
# Be aware that polling will consume resources, so a small refresh interval will increase cpu load.
# hue:refresh=10000

################################ RFXCOM Binding #######################################
#
# Serial port of RFXCOM interface
# Valid values are e.g. COM1 for Windows and /dev/ttyS0 or /dev/ttyUSB0 for Linux
#rfxcom:serialPort=

# Set mode command for controller (optional)
# E.g. rfxcom:setMode=0D000000035300000C2F00000000 
#rfxcom:setMode=

################################ Sonos Binding ########################################
#
#Add a line for each Sonos device you want to pre-define
#The format is <name>.udn=<RINCON UID>
#
#sonos:office.udn=RINCON_000XXXXXXXXX01400
#sonos:living.udn=RINCON_000YYYYYYYYY01400
#
#Interval, in milliseconds, to poll the Sonos devices for status variables
#sonos:pollingPeriod=1000

################################ SAMSUNG TV Binding ###################################
#
# Host of the first TV to control 
# samsungtv:<TVid1>.host=
# Port of the TV to control (optional, defaults to 55000)
# samsungtv:<TVid1>.port=

# Host of the second TV to control 
# samsungtv:<TVid2>.host=
# Port of the TV to control (optional, defaults to 55000)
# samsungtv:<TVid2>.port=

############################### Systeminfo Binding ####################################
#
# Interval in milliseconds when to find new refresh candidates
# (optional, defaults to 1000)
#systeminfo:granularity=

# Data Storage Unit, where B=Bytes, K=kB, M=MB, T=TB (optional, defaults to M)
#systeminfo:units=

################################ Z-Wave  Binding ######################################
#
# The Z-Wave controller port. Valid values are e.g. COM1 for Windows and /dev/ttyS0 or
# /dev/ttyUSB0 for Linux
zwave:port=/dev/ttyUSB0

# Z-Wave nightly heal time. This is the hour (eg 2AM) at which the automatic nightly
# network heal will be performed.
zwave:healtime=2


################################# TCP - UDP Binding ###################################
#
# all parameters can be applied to both the TCP and UDP binding unless 
# specified otherwise

# Port to listen for incoming connections
#tcp:port=25001

# Cron-like string to reconnect remote ends, e.g for unstable connection or remote ends
#tcp:reconnectcron=0 0 0 * * ?

# Interval between reconnection attempts when recovering from a communication error, 
# in seconds
#tcp:retryinterval=5

# Queue data whilst recovering from a connection problem (TCP only)
#tcp:queue=true

# Maximum buffer size whilst reading incoming data
#tcp:buffersize=1024

# Share connections within the Item binding configurations
#tcp:itemsharedconnections=true

# Share connections between Item binding configurations
#tcp:bindingsharedconnections=true

# Share connections between inbound and outbound connections
#tcp:directionssharedconnections=false

# Allow masks in ip:port addressing, e.g. 192.168.0.1:* etc
#tcp:addressmask=true

# Pre-amble that will be put in front of data being sent
#tcp:preamble=

# Post-amble that will be appended to data being sent
#tcp:postamble=\r\n

# Perform all write/read (send/receive) operations in a blocking mode, e.g. the binding
# will wait for a reply from the remote end after data has been sent
#tcp:blocking=false

# timeout, in milliseconds, to wait for a reply when initiating a blocking write/read
#  operation
#tcp:timeout=3000

# Update the status of Items using the response received from the remote end (if the
# remote end sends replies to commands)
#tcp:updatewithresponse=true

# Timeout - or 'refresh interval', in milliseconds, of the worker thread
tcp:refreshinterval=250

# Timeout, in milliseconds, to wait when "Selecting" IO channels ready for communication
#tcp:selecttimeout=1000

# Used character set
#tcp:charset=ASCII


############################### Insteon PLM Binding ###################################
#
# The insteon PLM controller port, one for each modem or hub.
# You can have multiple ports, but that has never been tested, use at your own peril.
#
# examples of valid port configurations for serial or usb modems:
#
# insteonplm:port_0=/dev/insteon  (Linux, with serial port symlinked to /dev/insteon)
# insteonplm:port_0=/dev/ttyS0    (Linux, with plain old serial modem)
# insteonplm:port_0=/dev/ttyUSB0  (Linux, with usb based PLM modem)
# insteonplm:port_0=COM1	  (Windows, with serial/usb modem on COM1)

#
# to connect to an Insteon Hub2 (the 2014 version) on port 25105, with
# a poll interval of 1000ms = 1sec:
#
# insteonplm:port_0=/hub2/my_user_name:my_password@myinsteonhub.mydomain:25105,poll_time=1000

#
# to connect to the raw tcp feed on an older Insteon Hub (pre 2014 version) on port 9761
#
# insteonplm:port_0=/hub/localhost:9761

# Poll interval (optional, in milliseconds, defaults to 300000).
# Poll too often and you will overload the insteon network,
# leading to sluggish or no response when trying to send messages to devices.
# The default poll interval of 300s has been tested and found to be a good
# compromise in a configuration of about 110 switches/dimmers.
#
#insteonplm:poll_interval=300000

# Refresh value (optional, in milliseconds, defaults to 600000)
# The refresh interval is not critical, since only device statistics are logged
# upon refresh (the polling operates under different timers).
#
#insteonplm:refresh=600000

# optional file with additional device types. The syntax of
# the file is identical to the device_types.xml file in the
# source tree. Please remember to post successfully added
# device types to the openhab group so the developers
# can include them into the device_types.xml file!

#insteonplm:more_devices=/path_to_file/more_devices.xml

# optional file with additional feature templates, like
# in the device_features.xml file in the source tree.

#insteonplm:more_features=/path_to_file/more_features.xml

############################## Withings Binding #######################################
#
# Data refresh interval in ms (optional, defaults to 60000)
#withings:refresh=


################################### Weather Binding ###################################
#
# The apikey for the different weather providers, at least one must be specified
# Note: Hamweather requires two apikeys: client_id=apikey, client_secret=apikey2
#weather:apikey.ForecastIo=
#weather:apikey.OpenWeatherMap=
#weather:apikey.WorldWeatherOnline=
#weather:apikey.Wunderground=
#weather:apikey.Hamweather=
#weather:apikey2.Hamweather=

# location configuration, you can specify multiple locations
#weather:location.<locationId1>.latitude=
#weather:location.<locationId1>.longitude=
#weather:location.<locationId1>.provider=
#weather:location.<locationId1>.language=
#weather:location.<locationId1>.updateInterval=

#weather:location.<locationId2>.latitude=
#weather:location.<locationId2>.longitude=
#weather:location.<locationId2>.provider=
#weather:location.<locationId2>.language=
#weather:location.<locationId2>.updateInterval=


############################### NetworkUpsTools Binding ###############################
#
# networkupstools:<instance name>.<parameter>=<value>
#

# Refresh interval for state updates in milliseconds (optional)
#networkupstools:ups1:refresh=60000

# UPS device name 
#networkupstools:ups1.device=ups

# UPS server hostname (optional)
#networkupstools:ups1.host=localhost

# UPS server port (optional)
#networkupstools:ups1.port=3493

# UPS server login (optional)
#networkupstools:ups1.login=

# UPS server pass (optional)
#networkupstools:ups1.pass=

############################## Nest binding ###########################################
#
# Data refresh interval in ms (optional, defaults to 60000)
#nest:refresh=

# the Nest Client ID needed to use the API, must be supplied
#nest:client_id=

# the Nest Client Secret needed to use the API, must be supplied
#nest:client_secret=

# the PIN code that Nest presented when you authorized the above client, must be supplied
#nest:pin_code=

############################### Plex Binding ##########################################
#
# IP address of the Plex server
#plex:host=192.168.1.15

# Optional, port that the Plex server is running on. Default = 32400
#plex:port=32400

# Refresh interval in ms. Default = 5000. 
#plex:refresh=5000

 # If you're using Plex Home you need to supply the username and password of your
 # Plex account here. If you don't want to enter your credentials you can also
 # directly set your account token below instead. 
#plex:username=Plex username

 # Plex password
#plex:password=Plex password

# Plex account token, use instead of username/password when using Plex Home. 
#plex:token=abcdefghijklmnopqrst


################################ Ecobee Binding #######################################
#
# Data refresh interval in ms (optional, defaults to 180000)
# ecobee:refresh=180000

# the temperature scale to use when sending or receiving temperatures
# optional, defaults to Fahrenheit (F)
# ecobee:tempscale=C

# the private API key issued be Ecobee to use the API (replace with your own)
# ecobee:appkey=9T4huoUXlT5b5qNpEJvM5sqTMgaNCFoV

# the application scope used when authorizing the binding
# choices are smartWrite,smartRead, or ems, or multiple (comma-separated, no spaces)
# ecobee:scope=smartWrite

